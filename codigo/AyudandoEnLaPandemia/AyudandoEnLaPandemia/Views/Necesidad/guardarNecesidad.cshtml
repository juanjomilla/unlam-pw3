@model GuardarNecesidadViewModel

@{
    Layout = "~/Views/Shared/_NecesidadesLayout.cshtml";

    var action = Model.ModificandoDatos ? "ActualizarNecesidad" : "GuardarNecesidad";
}

<div class="row">
    <div class="col-md-6 mx-auto">
        @using (Html.BeginForm(action, "Necesidad", FormMethod.Post, new { id = "CrearNecesidadForm", enctype = "multipart/form-data", @class = "form-group" }))
        {
            @Html.ValidationMessage("LimiteNecesidades")
            if (Html.ValidationMessage("PerfilIncompleto") != null)
            {
                @Html.Raw(string.Format(Html.ValidationMessage("PerfilIncompleto").ToString(), Html.ActionLink("Mi Perfil", "MiPerfil", "Home")));
            }

            @Html.HiddenFor(model => Model.ModificandoDatos)
            @Html.Hidden("idNecesidad", Model.IdNecesidad);

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => Model.Nombre, "Nombre")
                        @Html.TextBoxFor(model => Model.Nombre, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.Nombre)

                        @Html.LabelFor(model => Model.Descripcion, "Descripcion")
                        @Html.TextBoxFor(model => Model.Descripcion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.Descripcion)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => Model.FechaFin, "Fecha de finalización (dd/mm/aa)")
                        @Html.EditorFor(model => Model.FechaFin, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => Model.FechaFin)

                        @Html.LabelFor(model => Model.TelefonoContacto, "Teléfono de contacto")
                        @Html.TextBoxFor(model => Model.TelefonoContacto, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.TelefonoContacto)
                    </div>
                </div>
            </div>

            @MostrarTipoDonacion()

            <div>
                @Html.LabelFor(model => Model.Referencias, "Referencias")
                <div id="editorReferencias">
                    @Html.EditorFor(model => Model.Referencias, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessage("InsuficientesReferencias")
            </div>
            <input type="file" title="Agregar imagen" id="Foto" name="Foto" class="form-control-file" />
            @Html.ValidationMessage("ImagenEmpty")

            <input type="submit" value="Guardar necesidad" class="btn btn-primary" />
        }
    </div>
</div>

@helper MostrarTipoDonacion()
{
if (Model.ModificandoDatos)
{
    if (Model.TipoDonacion == GuardarNecesidadViewModel.TipoDeDonacion.Insumos)
    {
            @MostarInsumos();
            @Html.Hidden("TipoDonacion", 1)
        }
        else
        {
            @MostrarMonetaria();
            @Html.Hidden("TipoDonacion", 0)
        }
    }
    else
    {
        @MostrarDropDownTipoDonacion();
        @MostarInsumos();
        @MostrarMonetaria();

    }
}

@helper MostrarMonetaria()
{
    <div class="row">
        <div class="col-md-6 tipoDonacion 0">
            <div id="monetaria">
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => Model.CantDinero, "Cantidad de dinero")
                        @Html.TextBoxFor(model => Model.CantDinero, new { @class = "form-control" })
                        @Html.ValidationMessage("CantidadDinero")
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => Model.CBUAlias, "CBU/Alias")
                        @Html.TextBoxFor(model => Model.CBUAlias, new { @class = "form-control" })
                        @Html.ValidationMessage("CBUAliasEmpty")
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@helper MostarInsumos()
{
    <div class="row">
        <div class="col-md-6 tipoDonacion 1">
            <div id="insumos">
                @Html.LabelFor(model => Model.Insumos, "Insumos")
                <div id="editorInsumos">
                    @Html.EditorFor(model => Model.Insumos, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessage("InsumosEmpty")
                @if (!Model.ModificandoDatos)
                {
                    <input class="btn btn-primary" type="button" id="btnAgregarInsumo" value="Agregar insumos" />
                }
            </div>
        </div>
    </div>
}

@helper MostrarDropDownTipoDonacion()
{
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => Model.TipoDonacion, "Tipo de donación")
            @Html.EnumDropDownListFor(model => Model.TipoDonacion, new { @class = "form-control" })
        </div>
    </div>
}
